# name: CD-Liara
# on:
#   push:
#     branches: [main]
# jobs:
#   install-deps:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Cache node modules
#         id: cache
#         uses: actions/cache@v2
#         with:
#           path: node_modules
#           key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#       - name: npm install
#         if: steps.cache.outputs.cache-hit != 'true'
#         run: npm ci
#   distributed-task:
#     runs-on: ubuntu-latest
#     needs: install-deps
#     env:
#       LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}
#     steps:
#       - uses: actions/checkout@v2.5.0
#       - name: Set Release Version
#         run: |
#           echo "BUILD_VERSION=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#       - uses: nrwl/nx-set-shas@v3
#       - run: npm ci
#       - run: npx prisma generate
#       - run: npm i -g @liara/cli
#       - run: npx nx workspace-lint
#       - run: npx nx affected --target=lint --parallel=3
#       - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
#         name: affected deployment preparation
#       - run: |
#           npx prisma generate
#           npm i -g @liara/cli
#       - run: npx nx affected --target=build --parallel=3
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v3
#         with:
#           push: true
#           tags: emad111/backend:nx-base
#       - run: npx nx affected --target=deploy --parallel=3 --token="$LIARA_TOKEN"
